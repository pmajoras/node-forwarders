{"version":3,"sources":["implementations/FileForwarderService.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AAKb,8BAA8B,iBAAiB,CAAC,CAAA;AAChD,uBAAuB,WAAW,CAAC,CAAA;AAEnC;IAA0C,wCAAa;IACrD,8BAAY,OAAyB;QADvC,iBAiEC;QA/DG,kBAAM,EAAE,GAAG,EAAE,eAAM,CAAC,YAAY,EAAE,KAAK,EAAE,eAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAWnD,sBAAiB,GAAG,UAAC,GAA0B,EAAE,iBAA8C;YACrG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACR,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;YAC9C,CAAC;YAAC,IAAI,CAAC,CAAC;gBAEN,IAAI,UAAQ,GAAkB,EAAE,CAAC;gBACjC,iBAAiB,CAAC,OAAO,CAAC,UAAC,gBAAgB;oBACzC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;wBACxC,UAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,CAAC,UAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,OAAO,CAAC,UAAQ,CAAC;yBACnB,IAAI,CAAC,UAAC,MAAM;wBACX,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;oBACzD,CAAC,CAAC;yBACD,KAAK,CAAC,UAAC,GAAG;wBACT,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;oBAClD,CAAC,CAAC,CAAC;gBACP,CAAC;YACH,CAAC;QACH,CAAC,CAAA;QAhCC,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC9C,CAAC;QAED,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IA4BD,qCAAM,GAAN;QACE,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC9D,CAAC;IAED,uCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC1B,CAAC;IAED,6CAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAChC,CAAC;IAED,+CAAgB,GAAhB;QACE,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IAClC,CAAC;IAED,6CAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAChC,CAAC;IAED,sCAAO,GAAP;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACzB,CAAC;QACH,CAAC;IACH,CAAC;IACH,2BAAC;AAAD,CAjEA,AAiEC,CAjEyC,6BAAa,GAiEtD;AAjEY,4BAAoB,uBAiEhC,CAAA","file":"implementations/FileForwarderService.js","sourcesContent":["'use strict';\nimport { FSWatcher } from 'fs';\nimport { IForwarderService } from '../interfaces/IForwarderService';\nimport { ITextLogsWatcher } from '../interfaces/ITextLogsWatcher';\nimport { ILogMessageContainer, ILogMessage } from '../interfaces/ILogMessages';\nimport { HttpForwarder } from './HttpForwarder';\nimport { config } from '../config';\n\nexport class FileForwarderService extends HttpForwarder implements IForwarderService {\n  constructor(watcher: ITextLogsWatcher) {\n    super({ url: config.processorUrl, appId: config.appId });\n    if (watcher === null) {\n      throw new Error('The watcher is required.');\n    }\n\n    this.isDisposed = false;\n    this.watcher = watcher;\n  }\n\n  private watcher: ITextLogsWatcher;\n  private isDisposed: boolean;\n  private handleNewMessages = (err: NodeJS.ErrnoException, messagesContainer: Array<ILogMessageContainer>) => {\n    if (err) {\n      console.log('handleNewMessages > err', err);\n    } else {\n\n      let messages: ILogMessage[] = [];\n      messagesContainer.forEach((messageContainer) => {\n        messageContainer.messages.forEach((message) => {\n          messages.push(message);\n        });\n      });\n\n      if (messages.length > 0) {\n        this.forward(messages)\n          .then((result) => {\n            console.log('forwardResult message', 'result', result);\n          })\n          .catch((err) => {\n            console.log('forwardError message', 'err', err);\n          });\n      }\n    }\n  }\n\n  onInit() {\n    this.watcher.addNewMessagesListener(this.handleNewMessages);\n  }\n\n  onFinish() {\n    console.log('onFinish');\n  }\n\n  onForwardError() {\n    console.log('onForwardError');\n  }\n\n  onForwardSuccess() {\n    console.log('onForwardSuccess');\n  }\n\n  onForwardStart() {\n    console.log('onForwardStart');\n  }\n\n  dispose() {\n    if (!this.isDisposed) {\n      this.onFinish();\n      if (this.watcher !== null) {\n        this.watcher.dispose();\n      }\n    }\n  }\n}\n"],"sourceRoot":"/source/"}