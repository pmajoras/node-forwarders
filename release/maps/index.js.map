{"version":3,"sources":["index.ts"],"names":[],"mappings":"AAAA,8CAA8C;AAC9C,YAAY,CAAC;AAEb,qCAAqC,wCAAwC,CAAC,CAAA;AAC9E,gCAAgC,mCAAmC,CAAC,CAAA;AACpE,uBAAuB,UAAU,CAAC,CAAA;AAElC,IAAI,OAAO,GAAG,IAAI,2CAAoB,CAAC,IAAI,iCAAe,CAAC,EAAE,IAAI,EAAE,eAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AAC5F,OAAO,CAAC,MAAM,EAAE,CAAC;AAEjB,qBAAqB,OAAO,EAAE,GAAG;IAE/B,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QACpB,OAAO,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IACD,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACR,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IACD,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QACjB,OAAO,CAAC,IAAI,EAAE,CAAC;IACjB,CAAC;AACH,CAAC;AAED,kCAAkC;AAClC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAE9D,sBAAsB;AACtB,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAE7D,6BAA6B;AAC7B,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC","file":"index.js","sourcesContent":["/// <reference path=\"../typings/index.d.ts\" />\n'use strict';\nimport * as chokidar from 'chokidar';\nimport { FileForwarderService } from './implementations/FileForwarderService';\nimport { TextLogsWatcher } from './implementations/TextLogsWatcher';\nimport { config } from './config';\n\nvar service = new FileForwarderService(new TextLogsWatcher({ path: config.directoryPath }));\nservice.onInit();\n\nfunction exitHandler(options, err) {\n\n  if (options.cleanup) {\n    service.dispose();\n  }\n  if (err) {\n    console.log('exitHandler >> ', err.stack);\n  }\n  if (options.exit) {\n    process.exit();\n  }\n}\n\n//do something when app is closing\nprocess.on('exit', exitHandler.bind(null, { cleanup: true }));\n\n//catches ctrl+c event\nprocess.on('SIGINT', exitHandler.bind(null, { exit: true }));\n\n//catches uncaught exceptions\nprocess.on('uncaughtException', exitHandler.bind(null, { exit: true }));\n"],"sourceRoot":"/source/"}